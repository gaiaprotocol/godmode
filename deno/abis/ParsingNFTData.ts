/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  AddressLike,
  BaseContract,
  BigNumberish,
  BytesLike,
  ContractMethod,
  ContractRunner,
  FunctionFragment,
  Interface,
  Listener,
  Result,
} from "https://esm.sh/ethers@6.7.0";
import type {
  TypedContractEvent,
  TypedContractMethod,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
} from "https://raw.githubusercontent.com/yjgaia/contract-module/refs/heads/main/deno/abi/common.ts";

export interface ParsingNFTDataInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "getERC1155BalanceList_OneHolder"
      | "getERC1155BalanceList_OneToken"
      | "getERC20BalanceList_OneHolder"
      | "getERC20BalanceList_OneToken"
      | "getERC721BalanceList_OneHolder"
      | "getERC721BalanceList_OneToken"
      | "getERC721HolderList",
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getERC1155BalanceList_OneHolder",
    values: [AddressLike, AddressLike[], BigNumberish[][]],
  ): string;
  encodeFunctionData(
    functionFragment: "getERC1155BalanceList_OneToken",
    values: [AddressLike, AddressLike[], BigNumberish[][]],
  ): string;
  encodeFunctionData(
    functionFragment: "getERC20BalanceList_OneHolder",
    values: [AddressLike, AddressLike[]],
  ): string;
  encodeFunctionData(
    functionFragment: "getERC20BalanceList_OneToken",
    values: [AddressLike, AddressLike[]],
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721BalanceList_OneHolder",
    values: [AddressLike, AddressLike[]],
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721BalanceList_OneToken",
    values: [AddressLike, AddressLike[]],
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721HolderList",
    values: [AddressLike, BigNumberish[]],
  ): string;

  decodeFunctionResult(
    functionFragment: "getERC1155BalanceList_OneHolder",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC1155BalanceList_OneToken",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC20BalanceList_OneHolder",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC20BalanceList_OneToken",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721BalanceList_OneHolder",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721BalanceList_OneToken",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721HolderList",
    data: BytesLike,
  ): Result;
}

export interface ParsingNFTData extends BaseContract {
  connect(runner?: ContractRunner | null): ParsingNFTData;
  waitForDeployment(): Promise<this>;

  interface: ParsingNFTDataInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent,
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent,
  ): Promise<this>;

  getERC1155BalanceList_OneHolder: TypedContractMethod<
    [holder: AddressLike, erc1155s: AddressLike[], tokenIds: BigNumberish[][]],
    [bigint[][]],
    "view"
  >;

  getERC1155BalanceList_OneToken: TypedContractMethod<
    [erc1155: AddressLike, holders: AddressLike[], tokenIds: BigNumberish[][]],
    [bigint[][]],
    "view"
  >;

  getERC20BalanceList_OneHolder: TypedContractMethod<
    [holder: AddressLike, arg1: AddressLike[]],
    [bigint[]],
    "view"
  >;

  getERC20BalanceList_OneToken: TypedContractMethod<
    [erc20: AddressLike, arg1: AddressLike[]],
    [bigint[]],
    "view"
  >;

  getERC721BalanceList_OneHolder: TypedContractMethod<
    [holder: AddressLike, arg1: AddressLike[]],
    [bigint[]],
    "view"
  >;

  getERC721BalanceList_OneToken: TypedContractMethod<
    [nft: AddressLike, arg1: AddressLike[]],
    [bigint[]],
    "view"
  >;

  getERC721HolderList: TypedContractMethod<
    [nft: AddressLike, arg1: BigNumberish[]],
    [string[]],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment,
  ): T;

  getFunction(
    nameOrSignature: "getERC1155BalanceList_OneHolder",
  ): TypedContractMethod<
    [holder: AddressLike, erc1155s: AddressLike[], tokenIds: BigNumberish[][]],
    [bigint[][]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getERC1155BalanceList_OneToken",
  ): TypedContractMethod<
    [erc1155: AddressLike, holders: AddressLike[], tokenIds: BigNumberish[][]],
    [bigint[][]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getERC20BalanceList_OneHolder",
  ): TypedContractMethod<
    [holder: AddressLike, arg1: AddressLike[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getERC20BalanceList_OneToken",
  ): TypedContractMethod<
    [erc20: AddressLike, arg1: AddressLike[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getERC721BalanceList_OneHolder",
  ): TypedContractMethod<
    [holder: AddressLike, arg1: AddressLike[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getERC721BalanceList_OneToken",
  ): TypedContractMethod<
    [nft: AddressLike, arg1: AddressLike[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getERC721HolderList",
  ): TypedContractMethod<
    [nft: AddressLike, arg1: BigNumberish[]],
    [string[]],
    "view"
  >;

  filters: {};
}
